# This workflow will build a package using Maven and then publish it to Maven Central when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package to Central (v3)

on:
  workflow_dispatch: # allow to run manually
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up Java 17 for publishing to Maven Central Repository
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: ossrh # Value of the distributionManagement/repository/id field
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        # gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # don't duplicate'
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        
    - name: install gpg key
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

    - name: Build with Maven and test if signing works
      run: mvn clean package -P release --file pom.xml
      env:
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

    - name: Publish to Apache Maven Central
      run: mvn -DskipTests deploy -P release -s $GITHUB_WORKSPACE/settings.xml
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
